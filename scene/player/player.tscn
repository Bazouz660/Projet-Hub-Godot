[gd_scene load_steps=7 format=3 uid="uid://bgsiv5sfqs2dv"]

[ext_resource type="Shader" path="res://shader/outline.gdshader" id="1_1gtwv"]

[sub_resource type="GDScript" id="GDScript_pvqg1"]
script/source = "extends CharacterBody3D

const SPEED = 5.0
const JUMP_VELOCITY = 4.5


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_7ef3a"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_p2u5y"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_e0xqb"]
render_priority = 0
shader = ExtResource("1_1gtwv")
shader_parameter/depth_threshold = 0.05
shader_parameter/reverse_depth_threshold = 0.25
shader_parameter/normal_threshold = 0.6
shader_parameter/darken_amount = 0.3
shader_parameter/lighten_amount = 1.5
shader_parameter/normal_edge_bias = Vector3(1, 1, 1)
shader_parameter/light_direction = Vector3(-0.96, -0.18, 0.2)

[sub_resource type="QuadMesh" id="QuadMesh_oqrce"]
material = SubResource("ShaderMaterial_e0xqb")
flip_faces = true
size = Vector2(2, 2)

[node name="Player" type="CharacterBody3D"]
script = SubResource("GDScript_pvqg1")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("CapsuleShape3D_7ef3a")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
mesh = SubResource("CapsuleMesh_p2u5y")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.939693, 0.34202, 0, -0.34202, 0.939693, 0, 3, 5)

[node name="PostProcessing" type="MeshInstance3D" parent="Camera3D"]
mesh = SubResource("QuadMesh_oqrce")
skeleton = NodePath("../..")
